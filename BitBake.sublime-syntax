%YAML 1.2
---

# See http://www.sublimetext.com/docs/3/syntax.html

name: BitBake
file_extensions: [bb, bbappend, bbclass, conf, inc]
scope: source.bitbake

variables:
  operators: '(=|\+=|=\+|\?=|=\?|\?\?=|=\?\?|\.=|\:=)'
  reserved: '(DESCRIPTION|SECTION|LICENSE|LIC_FILES_CHKSUM|HOMEPAGE|PROVIDES|DEPENDS|SRC_URI|SRCREV|PACKAGE_ARCH|COMPATIBLE_MACHINE|TCLIBC|FILESEXTRAPATHS|MACHINE_FEATURES|IMAGE_FSTYPES|UBOOT_BINARY|EXTRA_IMAGEDEPENDS|MACHINE_FEATURES|KERNEL_IMAGETYPE|KERNEL_DEVICETREE|PREFERRED_PROVIDER|PREFERRED_VERSION|DEFAULTTUNE|IMAGE_CLASSES|SUMMARY|COMPATIBLE_HOST|FILES|PACKAGES|RDEPENDS|EXTRA_OECONF|EXTRA_OEMAKE|PR|PV|PN|S|B|D|EXTRA_OECMAKE|PYTHON_BASEVERSION)'
  keywords: '(inherit|INHERIT|include|require|addtask|deltask)'

contexts:
  main:
    - include: comments
    - include: assignments
    - include: functions

# ------------------------------------------------------------------------------

  comments:
    - match: '^#'
      push: line_comment
      with_prototype:
      - match: '$'
        pop: true

  functions:
    - match: '^\s*(python)\s+(\w*)\s*(?=\(\)\s*{)'
      captures:
        1: storage.type.bitbake
        2: entity.name.function.bitbake
      set: Packages/Python/Python.sublime-syntax
      with_prototype:
      - match: '(?=})'
        pop: true

    - match: '^\s*(\w+)\s*\(\)\s*(?={)'
      captures:
        1: entity.name.function.bitbake
      set: Packages/ShellScript/Shell-Unix-Generic.sublime-syntax
      with_prototype:
      - match: '(?=})'
        pop: true

  assignments:
    - match: '{{operators}}'
      scope: keyword.operator.assignment.bitbake

    - match: '^\b{{reserved}}\s*(?={{operators}})'
      scope: variable.language.bitbake

    - match: '^\b\w+\s*(?={{operators}})'
      scope: variable.other.bitbake

    - include: strings

# ------------------------------------------------------------------------------

  strings:
    - match: "'"
      scope: punctuation.definition.string.begin
      push: string_single_quoted
      with_prototype:
      - match: "'"
        scope: punctuation.definition.string.end
        pop: true

    - match: '"'
      scope: punctuation.definition.string.begin
      push: string_double_quoted
      with_prototype:
      - match: '"'
        scope: punctuation.definition.string.end
        pop: true

  string_single_quoted:
    - meta_scope: string.quoted.single.bitbake
    - match: '\\.?'
      scope: constant.character.escape.bitbake

  string_double_quoted:
    - meta_scope: string.quoted.double.bitbake
    - match: '\\.?'
      scope: constant.character.escape.bitbake

  line_comment:
    - meta_scope: comment.line.bitbake
